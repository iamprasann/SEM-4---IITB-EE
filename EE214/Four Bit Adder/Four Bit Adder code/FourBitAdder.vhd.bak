 library ieee;
use ieee.std_logic_1164.all;
library ieee;
use ieee.std_logic_1164.all;
library work;
use work.Gates.all;

entity Four_Bit_Adder  is
	port (A0, A1, A2, A3, B0, B1, B2, B3, Cin0, Cin1, Cin2, Cin3: in std_logic; R0, R1, R2, R3, Cout: out std_logic);
end entity Four_Bit_Adder;

architecture Struct of Four_Bit_Adder is
	
	component Full_Adder is
		port (A, B, Cin: in std_logic; S, Cout: out std_logic);
	end component Full_Adder
	
	signal : std_logic;

begin
	-- component instances
	ha: Half_Adder 
		 port map (A => A, B => B, S => tS, C => tC);

	-- propagate carry.
	a1: AND_2 port map (A => tS, B => Cin, Y => V);
	o1: OR_2  port map (A => V, B => tC, Y => Cout);

	-- final sum.
	x1: XOR_2 port map (A => tS, B => Cin, Y => S);
end Struct;
